*now.txt*           A pure vim minimalistic personal wiki 
                       Never Optimal Wiki (N.O.W.)~
                        CopyLeft Dalker 2015-2016~

*NeverOptimalWiki* *now*
=======================================================================

1. Intro ........................................... |now-intro|
    1.1 Why NOW? ................................... |now-why|
    1.2 What NOW? .................................. |now-what|
    1.3 Simplest setup of NOW ...................... |now-setup-simple|
2. Keybindings...................................... |now-keybindings|
3. Options ......................................... |now-options|
4. Syntax highlighing .............................. |now-syntax|
5. Changelog ....................................... |now-changelog|
6. Colophon ........................................ |now-about|

=======================================================================

1. Intro                                                    *now-intro*

1.1 Why NOW?                                                *now-why*

The author was dissatisfied with the complexities of the existing vim 
wiki plugins, so he decided to create a minimalistic personal wiki 
filetype. The idea is to rely as much as possible on vim itself as
well as the system's dir structure.

-----------------------------------------------------------------------

1.2 What NOW?                                               *now-what*

This plugin provides the |now| filetype for personal notes. It is 
intended to work with the following workflow:

- whenever a new idea or other input manifests itself, launch vim if
  not already there, and fill in a new "random entry", which will be
  initially an "anonymous file" in the random entries directory. This
  is achieved with {<leader>nr} (by default) from anywhere within vim

- at some point while writing or reviewing a random entry, it may be
  named (i.e. it gets a proper filename) with {<localleader>n}. The
  standard |now| suffix is automatically appended.

- once the entry is somewhat stabilized, it can be classified (i.e. 
  moved to an adequate zone in the dir structure) with {<localleader>c}

- a dated backup of the entry may be created in the "shadow" dir at any 
  time with {<localleader>s}

A few other simple |now-keybindings| are provided for ease of navigation,
as well as some minimal |now-syntax| highlighting and folding.

Linking between files is done the vim way, simply using {gf} on its
name, or with the overridden {enter} key that also checks if what is
pointed to looks like an URL (opened with web browser) or a recognized
mimetype (opened with mime opener), as well as creating the file if it
doesn't exist. Web browser and mime opener have default values that are
overrideable |now-options|.

It is recommended to emphasize that a word is a link by clarifying it
is meant as a filename, such as {./word}. Obvious links are highlighted.

-----------------------------------------------------------------------

1.3 Simplest setup of NOW                            *now-setup-simple* 

Cretea a dir for your default |now| location and add the following line 
to your .vimrc:
> let g:NOW_rootdir = '/path/to/your/now/dir'
>
Then try playing with the default |now-keybindings| and maybe obtain
some |now-highlighting|.

=======================================================================

2. Keybindings                                        *now-keybindings*

2.1 Global keybindings (may be overridden with |now-options|)
    <Leader>nn      - update and enter |now| root index
    <Leader>ni      - update and enter |now| current directory index
    <Leader>nr      - create and edit a new random entry

2.2 Local keybindings (within a |now| file)
    -               - navigate "up", to index file or to netrw
    <enter>         - navigate to file under cursor (as {gf}) or create it
    <LocalLeader>gf - browse URL or mimeopen file under cursor
    <LocalLeader>cf - create file under cursor (possibly adding extension)
    <LocalLeader>n  - name file (no need to type the extension)
    <LocalLeader>c  - classify file (i.e. move somewhere else)
    <LocalLeader>s  - shadow file (i.e. make a dated copy in shadow dir)

=======================================================================
3. Options                                                *now-options*

These can be set up on |.vimrc| to override the default values, as in the 
following example: 
> let g:NOW_rootdir = $HOME . '/active/now/'

*g:NOW_rootdir*
  base dir for NeverOptimaWiki, used by {<l>nn}
  default value: {$HOME . '/active/now/'}

*g:NOW_randomdir*
  subdir for random notes, relative to NOW root dir, used by {<l>nr}
  default value: {in/}

*g:NOW_shadowdir*
  subdir for date-sorted "shadow" content, used by {<ll>s}
  default value: {shadow/}

*g:NOW_classifydir*
  default subdir for classifiying, relative to |g:NOW_randomdir|, used by {<ll>nc}
  default value: {../circulating/}

*g:NOW_suffix*      
  suffix for now files
  default value: {.now}

*g:NOW_indexname*
  name of index files, without suffix, used by {<l>ni} and by {-}
  default value: {index}

*g:NOW_randombase* 
  base name for random entry files used by {<l>nr}
  default value: {random}

*g:NOW_webbrowser*
  choice of web browser, used by {<ll>gf}
  default value: {!firefox}

*g:NOW_mimeopencmd*
  choice of mimeopen program, used by {<ll>gf}
  default value: {!mimeopen}

*g:NOW_map_index*
*g:NOW_map_rnote*
*g:NOW_map_mkindex*
  global mappings, the description and default values of which can be 
  found in the help section |now-keybindings|

=======================================================================

4. Syntax highlighting                                      *now-syntax*
Very minimal syntax highlighting and folding is provided within a |now| buffer.

{./bla}
{/bla/bla}
{http[s]://bla}
{www.bla}
  these are recognized as "links" and highlighted accordingly
  they can be followed by {gf} or {enter} but so can any word if it's the
  name of an actual existing file (with possible |g:NOW_suffix| appended)
  or URL (with {enter} only, not with {gf})

{=bla=}
  this is recognized as a "title"; it is highlighted and can be folded

{*bla*}
  this is recognized as "emphasized text" and highlighted accordingly

{#bla}
{%bla}
  both of these are recognized as "comments" and are highlighted.


=======================================================================
5. Changelog                              *now-changelog*           {{{

* v0.6  - overhauled behaviour of <enter> (seek or create)
* v0.5  - added this documentation, plus a few minor changes
  v0.5.1: bugfix release

* v0.4: - user can now make index in local dir (default: {<l>nk})
        - navigation with {-} moves up to next index if available,
          auto-adding any new files at its bottom
        - folding implemented, based on 'titles' and 'subtitles'
  v0.4.1: bugfix release

* v0.2: - replaced some external program calls by pure vim
        - made options easier to override by user

* v0.3: - made it easier to create several instances of NOW
        - auto-creation of dirs when needed
  v0.3.1: bugfix release

* v0.1: initial working release on 
        http://www.vim.org/scripts/script.php?script_id=5263
}}}
=======================================================================
6. Colophon                                                 *now-about*

Never Optimal Wiki initially developped by:
    Dalker (https://github.com/Dalker)

Latest release at: http://www.vim.org/scripts/script.php?script_id=5263
 -> please vote there if you liked this plugin

Latest development version at: http://github.com/dalker/vim-now
 -> please create an 'issue' there if you want to report a bug

Never Optimal Wiki released under "CopyLeft" GPLv2
 -> see https://www.gnu.org/licenses/gpl-2.0.html

=======================================================================
= create date: 2015-11-08                                             =~
= modif  date: 2016-01-15
= vim: tw=70 ft=help foldenable fdm=marker fmr={{{,}}} fdl=0
